@model Orchard.Indexing.ViewModels.IndexViewModel
@using Orchard.Indexing.Services;

@{ Layout.Title = T("Indexes").ToString(); }

<div class="widget widget-fullwidth widget-small">
    <div class="widget-head">
        @using (Html.BeginFormAntiForgeryPost()) {
            <div class="row">
                <div class="col-sm-4">
                    @*<input id="publishActions" name="Options.BulkAction" type="hidden" value="None">
                        <button name="submit.BulkEdit" type="submit" class="hidden" value="Apply">Apply</button>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                <i class="fa fa-bolt"></i> Bulk Actions <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                <li><a href="#" data-confirm="Are you sure you want to update these items?" data-action="Update">Update</a></li>
                                <li><a href="#" data-confirm="Are you sure you want to rebuild these items?" data-action="Rebuild">Rebuild</a></li>
                                <li><a href="#" data-confirm="Are you sure you want to delete these items?" data-action="Delete">Delete</a></li>
                            </ul>
                        </div>*@
                </div>
                <div class="col-sm-4"></div>
                <div class="col-sm-4 text-right">
                    @if (Model.IndexProvider != null) {
                        <a href="@Url.Action("Create", "Admin" , new { area="Orchard.Indexing" })" class="btn btn-primary">
                            <i class="fa fa-plus"></i> @T("Add an index")
                        </a>
                    }
                </div>
            </div>
        }
    </div>
    @if (Model.IndexEntries.Any()) {
        using (Html.BeginFormAntiForgeryPost()) {
            <div id="table1_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">
                <div class="row am-datatable-body">
                    <div class="col-sm-12">
                        <div class="table-responsive table-with-footer">
                            <table id="table1" class="table table-fw-widget data-table table-striped dataTable no-footer" role="grid" aria-describedby="table1_info">
                                <thead>
                                    <tr role="rowheader">
                                        @*<th width="1%">
                                                <div class="am-checkbox inline">
                                                    <input id="checkAll" class="check-all" type="checkbox">
                                                    <label class="check-all" title="@T("Select All")" for="checkAll"></label>
                                                </div>
                                            </th>*@
                                        <th>@T("Index ID")</th>
                                        <th>@T("Documents")</th>
                                        <th>@T("Status")</th>
                                        <th>@T("Updated")</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var index in Model.IndexEntries) {
                                        var id = System.Text.RegularExpressions.Regex.Replace(index.IndexName, "[^A-Za-z0-9-]+", "_");
                                        <tr>
                                            @*<td>
                                                    <div class="am-checkbox">
                                                        <input type="checkbox" name="itemIds" value="@index.IndexName" id="@id">
                                                        <label for="@id">
                                                            <span class="sr-only">@T("Select")</span>
                                                        </label>
                                                    </div>
                                                </td>*@
                                            <td>@index.IndexName</td>
                                            <td>@index.DocumentCount</td>
                                            <td>
                                                @if (index.LastUpdateUtc == DateTime.MinValue) {
                                                    <p>@T("The search index has not been built yet.")</p>
                                                }

                                                @if (index.Fields == null || !index.Fields.Any()) {
                                                    <p>@T("No fields.")</p>
                                                }
                                                else {
                                                    <p>@T("Fields: {0}.", string.Join(T(", ").Text, index.Fields))</p>
                                                }

                                                @switch (index.IndexingStatus) {
                                                    case IndexingStatus.Rebuilding:
                                                        <p>@T("The indexing process is currently being rebuilt.")</p>
                                                        break;
                                                    case IndexingStatus.Updating:
                                                        <p>@T("The indexing process is currently being updated.")</p>
                                                        break;
                                                    case IndexingStatus.Unavailable:
                                                        <p>@T("The index is currently not available. Try to rebuild it.")</p>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (index.LastUpdateUtc != DateTime.MinValue) {
                                                    @Display.DateTimeRelative(DateTimeUtc: index.LastUpdateUtc)
                                                }
                                                else {
                                                    @:Never
                                            }
                                            </td>
                                            <td class="actions text-nowrap">
                                                <a href="@Url.Action("Update", "Admin" , new { area="Orchard.Indexing", id=index.IndexName })" class="btn btn-primary" itemprop="UnsafeUrl">
                                                    @T("Update")
                                                </a>
                                                <a href="@Url.Action("Rebuild", "Admin" , new { area="Orchard.Indexing", id=index.IndexName })" class="btn btn-primary" itemprop="UnsafeUrl">
                                                    @T("Rebuild")
                                                </a>
                                                <a href="@Url.Action("Delete", "Admin" , new { area="Orchard.Indexing", id=index.IndexName })" class="btn btn-danger" itemprop="RemoveUrl UnsafeUrl">
                                                    <i class="fa fa-trash"></i>
                                                    @T("Delete")
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                @*<div class="row am-datatable-footer">
                        <div class="col-sm-12">
                            @Display(Model.Pager)
                        </div>
                    </div>*@
            </div>
        }
    }
    else {
        <div class="widget-head">
            <p>
                @T("There is currently no index.")
            </p>
        </div>
    }
</div>
